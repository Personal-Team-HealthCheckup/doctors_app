name: CI/CD Build Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        java-version: [17]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.yarn
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Verify Versions
        run: |
          node -v
          java -version

      - name: Build Android Project
        run: |
          cd android
          ./gradlew assembleRelease -Dorg.gradle.jvmargs="-Xmx4096m"

      - name: Upload APK to GitHub Release
        if: github.ref == 'refs/heads/master'
        uses: ncipollo/release-action@v1
        with:
          artifacts: android/app/build/outputs/apk/release/app-release.apk
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tag: v${{ github.run_number }}
          name: Release ${{ github.run_number }}

      - name: Provide APK Download Link
        if: github.ref == 'refs/heads/master'
        run: echo "APK uploaded successfully. Check the latest release for the download link."
