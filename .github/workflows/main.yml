name: iOS & Android Fastlane CI/CD

on:
  push:
    branches: ['master']

jobs:
  ios-build:
    name: iOS Build & Test
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Node dependencies
        run: npm install --legacy-peer-deps

      - name: Install Fastlane
        run: |
          cd ios
          bundle init || true
          echo 'gem "fastlane"' >> Gemfile
          bundle install

      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update

      - name: Run iOS Fastlane lane
        run: |
          cd ios
          bundle exec fastlane ios_build_and_test   # Replace with your lane name

      - name: Upload iOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build

  android-build:
    name: Android Build & Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Fastlane
        run: |
          sudo gem install fastlane -NV

      - name: Run Android Fastlane lane
        run: |
          bundle exec fastlane android_build_and_release   # Replace with your lane name

      - name: Upload APK to GitHub Release
        if: github.ref == 'refs/heads/master'
        uses: ncipollo/release-action@v1
        with:
          artifacts: android/app/build/outputs/apk/release/app-release.apk
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tag: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
