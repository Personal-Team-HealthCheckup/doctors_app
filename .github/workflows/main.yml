name: iOS & Android Build CI/CD

on:
  push:
    branches: ['master', 'main']
  workflow_dispatch:

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Setup Android Signing
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          # Create keystore file from base64 secret
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/release.keystore

          # Create gradle.properties with signing config
          cat >> android/gradle.properties << EOF
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_KEY_ALIAS=$KEY_ALIAS
          MYAPP_UPLOAD_STORE_PASSWORD=$KEYSTORE_PASSWORD
          MYAPP_UPLOAD_KEY_PASSWORD=$KEY_PASSWORD
          EOF

      - name: Build Android Release APK
        run: bundle exec fastlane android build_release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: Upload APK to GitHub Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        uses: ncipollo/release-action@v1
        with:
          artifacts: android/app/build/outputs/apk/release/app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: android-v${{ github.run_number }}
          name: Android Release ${{ github.run_number }}
          body: |
            Automated Android build from commit ${{ github.sha }}

            **Download the APK below to install on your device**
          allowUpdates: true
          makeLatest: true

      - name: Clean up secrets
        if: always()
        run: |
          rm -f android/app/release.keystore
          rm -f android/gradle.properties

  ios-build:
    name: iOS Build
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Setup Fastlane
        run: bundle install

      - name: Build iOS Release IPA
        run: bundle exec fastlane ios build_release

      - name: Upload IPA artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-ipa
          path: build/doctor_app.ipa
          retention-days: 30

      - name: Upload IPA to GitHub Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/doctor_app.ipa
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ios-v${{ github.run_number }}
          name: iOS Release ${{ github.run_number }}
          body: |
            Automated iOS build from commit ${{ github.sha }}

            **Download the IPA below to install on your device**
          allowUpdates: true
          makeLatest: true
